buildcmd () {
  echo "run command: ${@:2}" | tee $1
  { time "${@:2}" ; } 2>&1 | tee -a $1
  echo "done; log file: $(cd "$(dirname $1)" && pwd)/$1" | tee -a $1
}

download_md5 () {
  local loc=${DEVENVDLROOT}/$1
  local url=$2
  local md5hash=$3
  if [ $(uname) == Darwin ] ; then
    local md5="md5 -q"
  elif [ $(uname) == Linux ] ; then
    local md5=md5sum
  fi
  local md5hash_calc=$($md5 $loc | cut -d ' ' -f 1)
  echo "$(basename $loc) md5 $md5hash (archived)"
  echo "$(basename $loc) md5 $md5hash_calc (calculated)"
  if [ ! -e $loc ] || [ "$md5hash" != "$md5hash_calc" ] ; then
    mkdir -p $(dirname $loc)
    rm -f $loc
    echo "Download from $url"
    curl -sSL ${CURLARGS} -o $loc $url
  fi
  if [ "$md5hash" != "$md5hash_calc" ] ; then
    echo "$(basename $loc) md5 hash $md5hash but got $md5hash_calc"
  else
    echo "$(basename $loc) md5 hash $md5hash confirmed"
  fi
}

syncgit () {
  local giturl=$1
  local pkgname=$2
  local pkgbranch=$3
  local pkgfull=${4:-${pkgname}-${pkgbranch}}
  local pkgrepo=${giturl}/${pkgname}.git

  # unpack (clone)
  mkdir -p ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src
  pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src > /dev/null

  if [ ! -d ${pkgfull} ] ; then
    git clone -b ${pkgbranch} ${pkgrepo} ${pkgfull}
  else
    pushd ${pkgfull}
    git fetch
    git checkout ${pkgbranch}
    git pull origin ${pkgbranch}
    popd > /dev/null
  fi

  popd > /dev/null
}

# vim: set et nu nobomb fenc=utf8 ft=bash ff=unix sw=2 ts=2:
