#!/usr/bin/env bash

set -e

SRCSYNC=${SRCSYNC:-tarball}

if [ "${SRCSYNC}" == "tarball" ] ; then

  pkgname=pybind11
  pkgver=${VERSION:-2.13.6}
  pkgfull=${pkgname}-${pkgver}
  pkgfn=${pkgfull}.tar.gz
  pkgurl=https://github.com/pybind/pybind11/archive/refs/tags/v${pkgver}.tar.gz

  download_md5 $pkgfn $pkgurl a04dead9c83edae6d84e2e343da7feeb

  mkdir -p ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src
  pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src > /dev/null
    tar xf ${DEVENVDLROOT}/$pkgfn
  popd > /dev/null

elif [ "${SRCSYNC}" == "git" ] ; then

  pkgname=pybind11
  pkgbranch=${VERSION:-master}
  pkgfull=${pkgname}-${pkgbranch}

  # unpack (clone)
  syncgit https://github.com/pybind ${pkgname} ${pkgbranch} ${pkgfull}

else

  devenv_display -e "Invalid \${SRCSYNC} ${SRCSYNC}"
  exit

fi

if [ "${DEVENV_DLONLY}" == "1" ] ; then
  echo "\${DEVENV_DLONLY}=1 ; existing"
  exit 1
else
  echo "if you want to exit after downloading: export \${DEVENV_DLONLY}=1"
fi

# build.

# prepare files for building.
if [ ! -e ${DEVENVPREFIX}/bin/python3 ]; then
  devenv_display -e "Python3 not exist!!"
  exit
fi

PYTHON=${DEVENVPREFIX}/bin/python3

cmakecmd=("cmake")
cmakecmd+=("-DPYTHON_EXECUTABLE:FILEPATH=${PYTHON}")
cmakecmd+=("-DCMAKE_INSTALL_PREFIX=${DEVENVPREFIX}")
PYBIND11_TEST=${PYBIND11_TEST:-OFF}
cmakecmd+=("-DPYBIND11_TEST=${PYBIND11_TEST}")

if [ -z "${CMAKE_BUILD_TYPE}" ] ; then
  CMAKE_BUILD_TYPE=Release
  if [[ $DEVENVFLAVOR == dbg* ]] ; then
    CMAKE_BUILD_TYPE=Debug
  fi
fi
cmakecmd+=("-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}")

mkdir -p ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull}/build

pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull}/build > /dev/null

  buildcmd cmake.log "${cmakecmd[@]}" ..
  buildcmd make.log make -j $NP
  buildcmd install.log make install

  pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull} > /dev/null
    buildcmd build/setup.log $PYTHON setup.py install
  popd > /dev/null

popd > /dev/null

# vim: set et nobomb ft=bash ff=unix fenc=utf8:
