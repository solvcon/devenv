#!/usr/bin/env bash

# Building document: https://docs.scipy.org/doc/scipy/building/index.html

set -e

SRCSYNC=${SRCSYNC:-tarball}

pkgname=scipy

if [ "${SRCSYNC}" == "tarball" ] ; then

  # Tarball location: https://github.com/scipy/scipy/releases
  pkgver=${VERSION:-1.15.2}
  pkgfull=${pkgname}-${pkgver}
  pkgfn=${pkgfull}.tar.gz
  pkgurl=https://github.com/${pkgname}/${pkgname}/releases/download/v${pkgver}/${pkgfn}

  download_md5 $pkgfn $pkgurl 515fc1544d7617b38fe5a9328538047b

  mkdir -p ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src
  pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src > /dev/null
    tar xf ${DEVENVDLROOT}/$pkgfn
  popd > /dev/null

elif [ "${SRCSYNC}" == "git" ] ; then

  pkgbranch=${VERSION:-main}
  pkgfull=${pkgname}

  # unpack (clone)
  syncgit https://github.com/${pkgname} ${pkgname} ${pkgbranch} ${pkgfull}

  if [[ -f "${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull}/.gitmodules" ]] ; then
    pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull} > /dev/null
    git submodule update --init
    popd > /dev/null
  fi
else

  devenv_display -e "Invalid \${SRCSYNC} ${SRCSYNC}"
  exit

fi

if [ "${DEVENV_DLONLY}" == "1" ] ; then
  echo "\${DEVENV_DLONLY}=1 ; existing"
  exit 1
else
  echo "if you want to exit after downloading: export \${DEVENV_DLONLY}=1"
fi

# build.

pushd ${DEVENVFLAVORROOT}/${DEVENVFLAVOR}/src/${pkgfull} > /dev/null

# prepare files for building.
if [ ! -e ${DEVENVPREFIX}/bin/python3 ]; then
    devenv_display -e "Python3 not exist!!"
    exit
fi

PYTHON=${DEVENVPREFIX}/bin/python3

rm -f site.cfg

if [ $(uname) == Darwin ] ; then
  # SciPy does not yet support accelerate on macos
  openblaspath="/opt/homebrew/opt/openblas"
  export PKG_CONFIG_PATH="${openblaspath}/lib/pkgconfig"
  # Xcode clang does not support -fopenmp
  llvmpath="/opt/homebrew/opt/llvm"
  export CC="${llvmpath}/bin/clang"
  export CXX="${llvmpath}/bin/clang++"
  export LDFLAGS="-L${llvmpath}/lib"
  export CPPFLAGS="-I${llvmpath}/include"
fi

export NPY_BLAS_ORDER

if [ -z "${NOFORTRAN}" ] ; then
cat >> setup.cfg << EOF

[config_fc]
fcompiler = gfortran
EOF
fi

buildcmd dependency.log pip3 install -r requirements/dev.txt
buildcmd build.log ${PYTHON} dev.py build -j ${NP}
buildcmd install.log pip3 install .
# Use -e . --no-build-isolation when hacking scipy
#buildcmd install.log pip3 install -e . --no-build-isolation

popd > /dev/null

# vim: set et nobomb ft=bash ff=unix fenc=utf8:
